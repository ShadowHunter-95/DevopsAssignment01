Description: "Setting up a VPC with public and private subnets, security groups, and EC2 instances by using the AWS cloudformation"

Parameters:
  HITTCompanyVPCCIDRRange:
    Description: VPC IP Range for the HITT Company
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetCIDRRange:
    Description: IP range for the Public Subnet
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnetCIDRRange:
    Description: IP range for the Private Subnet
    Type: String
    Default: 10.0.2.0/24

  AvailabilityZone:
    Description: Availability Zone for the subnets
    Type: AWS::EC2::AvailabilityZone::Name
    ConstraintDescription: Specify an available for Availability Zone

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3.small
      - t3.medium
  KeyName:
    Description: Name of an existing EC2 KeyPair for SSH access
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    
Mappings:
  RegionMap:
    eu-west-1:
      AMI: ami-00385a401487aefa4
    eu-west-2:
      AMI: ami-0acc77abdfc7ed5a6
    eu-west-3:
      AMI: ami-00d81861317c2cc1f
    eu-central-1:
      AMI: ami-08ec94f928cf25a9d
    eu-north-1:
      AMI: ami-02db68a01488594c5

Resources:
  HITTCompanyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref HITTCompanyVPCCIDRRange #10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: HITTCompanyVPC

  HITTCompanyInternetGateway: # Gateway internet for Public Subnet
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: HITTCompanyInternetGateway

  HITTCompanyAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref HITTCompanyVPC
      InternetGatewayId: !Ref HITTCompanyInternetGateway

  # Public Subnet
  HITTCompanyPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HITTCompanyVPC
      CidrBlock: !Ref PublicSubnetCIDRRange #10.0.1.0/24
      AvailabilityZone: !Ref AvailabilityZone #!Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet

  # Private Subnet
  HITTCompanyPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HITTCompanyVPC
      CidrBlock: !Ref PrivateSubnetCIDRRange #10.0.2.0/24
      AvailabilityZone: !Ref AvailabilityZone #!Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: PrivateSubnet

  # Creating JumpBox Security Group
  HITTCompanyJumpBoxEC2PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref HITTCompanyVPC
      GroupDescription: "Public Security Group allowing only SSH"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0        
  
  # Creating the Public Subnet Security Group
  HITTCompanyPublicEC2PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref HITTCompanyVPC
      GroupDescription: "Public Security Group Regulating traffic from SSH, HTTP, and HTTPS"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref HITTCompanyJumpBoxEC2PublicSecurityGroup
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0      

  # Creating the Private Subnet Security Group        
  HITTCompanyPrivateEC2PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref HITTCompanyVPC
      GroupDescription: "Allowing only SSH from JumpBox"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref HITTCompanyJumpBoxEC2PublicSecurityGroup

  # Creating the Public Subnet Route Table
  HITTCompanyPublicEC2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref HITTCompanyVPC
      Tags:
        - Key: Name
          Value: HITTCompany-publicroutetable

  HITTCompanyDefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: HITTCompanyAttachGateway
    Properties:
      RouteTableId: !Ref HITTCompanyPublicEC2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref  HITTCompanyInternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref HITTCompanyPublicEC2RouteTable
      SubnetId: !Ref HITTCompanyPublicSubnet

  # Creating the Private Subnet Route Table
  HITTCompanyPrivateEC2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref HITTCompanyVPC

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref HITTCompanyPrivateEC2RouteTable
      SubnetId: !Ref HITTCompanyPrivateSubnet
    
  # Jumpbox Instance block has been created
  HITTCompanyJumpBoxEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType #t2.micro
      KeyName: !Ref KeyName #L00187650HITT_KEY 
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI] #ami-00385a401487aefa4
      SubnetId: !Ref   HITTCompanyPublicSubnet
      SecurityGroupIds: 
        - !Ref HITTCompanyJumpBoxEC2PublicSecurityGroup
      Tags:
        - Key: Name
          Value: HITTCompany-JB Public

  HITTCompanyPublicEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType #t2.micro
      KeyName: !Ref KeyName #L00187650HITT_KEY
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI] #ami-00385a401487aefa4
      SubnetId: !Ref HITTCompanyPublicSubnet
      SecurityGroupIds: 
        - !Ref HITTCompanyPublicEC2PublicSecurityGroup
      Tags:
        - Key: Name
          Value: HITTCompany-PublicInstance

  HITTCompanyPrivateEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType #t2.micro 
      KeyName: !Ref KeyName #L00187650HITT_KEY 
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI] #ami-00385a401487aefa4
      SubnetId: !Ref HITTCompanyPrivateSubnet
      SecurityGroupIds: 
        - !Ref HITTCompanyPrivateEC2PrivateSecurityGroup
      Tags:
        - Key: Name
          Value: HITTCompany-PrivateInstance